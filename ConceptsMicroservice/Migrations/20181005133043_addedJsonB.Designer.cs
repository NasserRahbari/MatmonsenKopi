// <auto-generated />
using ConceptsMicroservice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ConceptsMicroservice.Migrations
{
    [DbContext(typeof(ConceptsContext))]
    [Migration("20181005133043_addedJsonB")]
    partial class addedJsonB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ConceptsMicroservice.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.Concept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Content");

                    b.Property<string>("Created");

                    b.Property<int>("ExternalId");

                    b.Property<int>("MetadataId");

                    b.Property<int>("StatusId");

                    b.Property<string>("Title");

                    b.Property<string>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("MetadataId");

                    b.HasIndex("StatusId");

                    b.ToTable("Concepts");
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.ConceptMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConceptId");

                    b.Property<int>("MetadataId");

                    b.HasKey("Id");

                    b.HasIndex("ConceptId");

                    b.HasIndex("MetadataId");

                    b.ToTable("ConceptMetas");
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.Metadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.MetaData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value")
                        .HasColumnType("json");

                    b.HasKey("Id");

                    b.ToTable("MetaJson");
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.PublishingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PublishingStatus");
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.Concept", b =>
                {
                    b.HasOne("ConceptsMicroservice.Models.MetaData", "Metadata")
                        .WithMany()
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConceptsMicroservice.Models.PublishingStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.ConceptMeta", b =>
                {
                    b.HasOne("ConceptsMicroservice.Models.Concept", "Concept")
                        .WithMany()
                        .HasForeignKey("ConceptId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConceptsMicroservice.Models.Metadata", "Metadata")
                        .WithMany("Concepts")
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConceptsMicroservice.Models.Metadata", b =>
                {
                    b.HasOne("ConceptsMicroservice.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
